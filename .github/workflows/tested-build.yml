name: Tested Build

on:
  workflow_dispatch:

env:
  ContinuousIntegrationBuild: true
  DOTNET_NOLOGO: true
  SuppressNETCoreSdkPreviewMessage: true

jobs:
  platform-build:
    name: Platform Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-22.04-arm, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Setup prerequisites
        uses: ./.github/actions/setup-prerequisites

      # - name: Setup MSYS2
      #  if: runner.os == 'Windows'
      #  uses: msys2/setup-msys2@v2

      - name: Setup Cygwin
        if: runner.os == 'Windows'
        uses: cygwin/cygwin-install-action@v6

      - name: Setup GNU
        if: runner.os == 'macOS'
        run: |
          brew install gnu-sed

      - name: Diagnostic
        run: |
          just toolkit-list
          just toolkit-check

      - name: Diagnostic (Windows)
        if: runner.os == 'Windows'
        run: |
          just toolkit-check msys2
          just toolkit-check cygwin
          just toolkit-check git

      - name: Diagnostic (macOS)
        if: runner.os == 'macOS'
        run: |
          just toolkit-check brew
          echo "sed: $(just gnu-tk -l which sed)"

      - name: Test
        run: just test

      - name: Build platform-dependent artifacts
        run: just platform-build

      - uses: actions/upload-artifact@v4
        with:
          name: gnu-tk-artifacts-${{ matrix.os }}
          path: |
            Source/**/bin/Release/**/publish/
            !Source/**/*.pdb
            !Source/**/*.dbg
            !Source/**/*.dSYM
          if-no-files-found: error

  publish:
    name: Publish
    needs: platform-build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup prerequisites
        uses: ./.github/actions/setup-prerequisites

      - run: sudo apt-get install -y xq

      - name: Setup security environment
        env:
          GP_OSS_ASSEMBLY_SNK: ${{ secrets.GP_OSS_ASSEMBLY_SNK }}
        run: |
          echo $GP_OSS_ASSEMBLY_SNK | base64 --decode > gp-oss-assembly.snk

      - name: Create .env file
        run: |
          cat <<EOF >.env
          AssemblyOriginatorKeyFile=`pwd`/gp-oss-assembly.snk
          EOF

      - name: Publish artifacts
        run: just publish

      - uses: actions/download-artifact@v4
        with:
          path: Source
          merge-multiple: true

      - name: Publish platform-dependent artifacts
        run: just platform-publish

      - uses: actions/upload-artifact@v4
        with:
          name: gnu-tk-artifacts-publish
          path: |
            Documentation/CHANGELOG.md
            Source/**/bin/Release/nuget/*.nupkg
            Source/Packaging/**/bin/*.zip
            Source/Packaging/**/bin/*.tar.gz
            Source/Packaging/**/bin/*.tgz
            Source/Packaging/**/bin/*SUMS
          if-no-files-found: error
